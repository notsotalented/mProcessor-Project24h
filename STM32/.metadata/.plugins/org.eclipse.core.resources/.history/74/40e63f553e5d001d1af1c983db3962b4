/*
 * button.c
 *
 *  Created on: Nov 5, 2022
 *      Author: ASUS
 */

#include "button.h"

int button_inc_flag = 0;
int button_dec_flag = 0;
int button_reset_flag = 0;
int button_hold_flag = 2;

int KeyReg0[3] = {NORMAL_STATE, NORMAL_STATE, NORMAL_STATE};
int KeyReg1[3] = {NORMAL_STATE, NORMAL_STATE, NORMAL_STATE};
int KeyReg2[3] = {NORMAL_STATE, NORMAL_STATE, NORMAL_STATE};

int KeyReg3[3] = {NORMAL_STATE, NORMAL_STATE, NORMAL_STATE};

int TimerForKeyPress = 300;

int isButtonINCPressed() {
	if(button_inc_flag == 1) {
		button_inc_flag = 0;
		setTimer2(1000);
		return 1;
	}
	return 0;
}

int isButtonDECPressed() {
	if(button_dec_flag == 1) {
		button_dec_flag = 0;
		return 1;
	}
	return 0;
}

int isButtonRESPressed() {
	if (button_reset_flag == 1) {
		button_reset_flag = 0;
		return 1;
	}
	return 0;
}

//This func do work
void subKeyProcess(int sw) {
	//HAL_GPIO_TogglePin(LED_RED_GPIO_Port, LED_RED_Pin);
	switch(sw) {
	case 0:
		button_inc_flag = 1;
		break;
	case 1:
		button_dec_flag = 1;
		break;
	case 2:
		button_reset_flag = 1;
		break;
	}
}

void holdKeyProcess(int sw) {
	switch(sw) {
	case 0:
		button_inc_flag = 1;
		break;
	case 1:
		button_dec_flag = 1;
		break;
	case 2:
		break;
	}
}

void getKeyInput(){
	for (int i = 0; i < 3; i++) {
		KeyReg0[i] = KeyReg1[i];
		KeyReg1[i] = KeyReg2[i];

		if (i == 0) {
			KeyReg2[i] = HAL_GPIO_ReadPin(INC_GPIO_Port, INC_Pin);
		}
		else if (i == 1) {
			KeyReg2[i] = HAL_GPIO_ReadPin(DEC_GPIO_Port, DEC_Pin);
		}
		else {
			KeyReg2[i] = HAL_GPIO_ReadPin(RESET_GPIO_Port, RESET_Pin);
		}

		if ((KeyReg0[i] == KeyReg1[i]) && (KeyReg1[i] == KeyReg2[i])) {
				if (KeyReg3[i] != KeyReg2[i]) {
					KeyReg3[i] = KeyReg2[i];
					if (KeyReg2[i] == PRESSED_STATE) {
					  //TODO
					  subKeyProcess(i);
					  button_hold_flag = i;
					  TimerForKeyPress = 300;
					  if (button_hold_flag != 2) {
						  TimerForKeyPress = 100;
					  }
					}
				}
				else {
					TimerForKeyPress--;
					if (TimerForKeyPress == 0) {
						//TODO
						KeyReg3[i] = NORMAL_STATE;
						button_hold_flag = 2;

						TimerForKeyPress = 300;
					  }
				}
		}
	}
}
